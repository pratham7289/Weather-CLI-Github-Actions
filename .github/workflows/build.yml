name: Build and Release Weather CLI Tool

on:
  push:
    branches:
      - feature   # Trigger on push to the feature branch
      - dev       # Trigger on push to the dev branch
      - main      # Trigger on push to the main branch

env:
  BUILD_NUMBER: ${{ github.run_number }}  # Unique build number
  BUILD_DIR: "dev-merger-build"           # Directory to store dev builds

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use system-installed Python 3.9
        run: |
          python3.9 --version
          pip3.9 install --upgrade pip
          pip3.9 install requests pyinstaller

      - name: Build the project
        run: |
          pyinstaller --onefile weather.py
          ls -l dist  # Debugging: List files in dist folder
          
          # Rename build output based on branch
          if [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            mv dist/weather dist/weather-dev-${{ env.BUILD_NUMBER }}
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            mv dist/weather dist/weather-main-${{ env.BUILD_NUMBER }}
          else
            mv dist/weather dist/weather-feature-${{ env.BUILD_NUMBER }}
          fi

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: weather-tool-${{ github.ref_name }}
          path: dist/

  store_dev_build:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: weather-tool-dev
          path: dist/

      - name: Create folder for dev build and copy the file
        run: |
          BUILD_NAME="weather-dev-${{ env.BUILD_NUMBER }}"
          mkdir -p $BUILD_DIR
          cp dist/weather-dev-${{ env.BUILD_NUMBER }} $BUILD_DIR/$BUILD_NAME
          ls -l $BUILD_DIR  # Debugging: Check stored builds

      - name: Commit and push dev build to GitHub repo
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}  # Use your custom token (MY_TOKEN)
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add $BUILD_DIR/
          git commit -m "Add build $BUILD_NAME"
          git push origin dev

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: weather-tool-main
          path: dist/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}  # Use your custom token (MY_TOKEN)
        run: |
          VERSION="v${{ env.BUILD_NUMBER }}"
          gh release create "$VERSION" dist/weather-main-${{ env.BUILD_NUMBER }} \
            --title "Build $VERSION" \
            --notes "Automated build and release for Weather CLI Tool."
