name: Build and Release Weather CLI Tool

on:
  push:
    branches:
      - dev
      - main

env:
  BUILD_NUMBER: ${{ github.run_number }}

permissions:
  contents: write
  id-token: write  # Required for GH_TOKEN authentication and so on

jobs:
  build:
    runs-on: self-hosted

    outputs:
      binary_name: ${{ steps.set_output.outputs.binary_name }}
      release_tag: ${{ steps.set_output.outputs.release_tag }}
      dev_build_number: ${{ steps.set_output.outputs.dev_build_number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use system-installed Python 3.9
        run: |
          python3 --version
          pip install --upgrade pip
          pip install requests pyinstaller

      - name: Install GitHub CLI on self-hosted runner (no sudo)
        run: |
          mkdir -p $HOME/.local/bin
          curl -fsSL -o gh.tar.gz https://github.com/cli/cli/releases/download/v2.47.0/gh_2.47.0_linux_amd64.tar.gz
          tar -xzf gh.tar.gz
          mv gh_2.47.0_linux_amd64/bin/gh $HOME/.local/bin/
          chmod +x $HOME/.local/bin/gh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Set output names and build
        id: set_output
        run: |
          set -euxo pipefail
          pyinstaller --onefile weather.py

          if [ "$GITHUB_REF" = "refs/heads/dev" ]; then
            BIN_NAME="dev-bin-$BUILD_NUMBER"
            TAG="v1.0.0-dev-$BUILD_NUMBER"
            DEV_BUILD="$BUILD_NUMBER"
          elif [ "$GITHUB_REF" = "refs/heads/main" ]; then
            DEV_BUILD=$(gh release list --limit 1 --repo "$GITHUB_REPOSITORY" | awk '{print $1}' | grep -o '[0-9]*$' || echo "0")
            BIN_NAME="main-bin-$BUILD_NUMBER-from-dev-$DEV_BUILD"
            TAG="v1.0.0-$BUILD_NUMBER"
          fi

          mv dist/weather dist/$BIN_NAME

          echo "binary_name=$BIN_NAME" >> $GITHUB_OUTPUT
          echo "release_tag=$TAG" >> $GITHUB_OUTPUT
          echo "dev_build_number=$DEV_BUILD" >> $GITHUB_OUTPUT

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set_output.outputs.binary_name }}
          path: dist/${{ steps.set_output.outputs.binary_name }}

  release:
    runs-on: ubuntu-latest
    needs: build
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install GitHub CLI (no sudo)
        run: |
          mkdir -p $HOME/.local/bin
          curl -fsSL -o gh.tar.gz https://github.com/cli/cli/releases/download/v2.47.0/gh_2.47.0_linux_amd64.tar.gz
          tar -xzf gh.tar.gz
          mv gh_2.47.0_linux_amd64/bin/gh $HOME/.local/bin/
          chmod +x $HOME/.local/bin/gh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.binary_name }}
          path: dist/

      - name: Create GitHub Release (Pre-release for dev, Stable for main)
        run: |
          mkdir -p dist
          BIN_NAME="${{ needs.build.outputs.binary_name }}"
          TAG="${{ needs.build.outputs.release_tag }}"
          DEV_BUILD="${{ needs.build.outputs.dev_build_number }}"

          if [[ "$TAG" == *-dev-* ]]; then
            gh release create "$TAG" dist/$BIN_NAME \
              --title "Dev Build $DEV_BUILD" \
              --notes "Automated pre-release build for development." \
              --prerelease
          else
            gh release create "$TAG" dist/$BIN_NAME \
              --title "Stable Build $TAG (from dev $DEV_BUILD)" \
              --notes "Stable production release. Built from dev build $DEV_BUILD."
          fi
